name: Build and Push Docker Image

on:
  schedule:
    - cron: '0 16 * * *'  # UTC 16:00 = 北京时间 00:00
  workflow_dispatch:  # 允许手动触发
  push:
    tags:
      - '*'  # 当推送tag时也触发构建

env:
  DOCKER_IMAGE: xxllllll/p115nano302

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get latest version from PyPI
        id: pypi_version
        run: |
          PYPI_VERSION=$(curl -s https://pypi.org/pypi/p115nano302/json | jq -r '.info.version')
          DOCKER_VERSION=$(curl -s "https://hub.docker.com/v2/repositories/${DOCKER_IMAGE}/tags" | jq -r '.results[].name' | grep -v 'latest' | sort -V | tail -n1 || echo "none")
          echo "pypi_version=${PYPI_VERSION}" >> $GITHUB_OUTPUT
          echo "docker_version=${DOCKER_VERSION}" >> $GITHUB_OUTPUT
          if [ "${DOCKER_VERSION}" != "${PYPI_VERSION}" ]; then
            echo "need_update=true" >> $GITHUB_OUTPUT
          else
            echo "need_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Show version info
        run: |
          echo "PyPI version: ${{ steps.pypi_version.outputs.pypi_version }}"
          echo "Docker version: ${{ steps.pypi_version.outputs.docker_version }}"
          echo "Need update: ${{ steps.pypi_version.outputs.need_update }}"

      - name: Build and push
        if: steps.pypi_version.outputs.need_update == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ steps.pypi_version.outputs.pypi_version }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE }}:buildcache,mode=max

      - name: Update Docker Hub description
        if: steps.pypi_version.outputs.need_update == 'true'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKER_IMAGE }}
          readme-filepath: ./README.md 